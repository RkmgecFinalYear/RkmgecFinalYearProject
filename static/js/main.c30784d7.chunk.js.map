{"version":3,"sources":["component/questions.js","component/HomePage.js","component/level2.js","component/game.js","App.js","reportWebVitals.js","index.js"],"names":["questions","image","questionText","answerOptions","answerText","isCorrect","Home","useState","isClick","setIsClick","show","setShow","className","onClick","class","Game2","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","setClicked","setAnswer","style","alignItems","borderRadius","map","setTimeout","nextQuetions","length","Game","currentimage","setCurrentImage","isNextClick","setIsNextClick","src","alt","width","height","nextImage","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c30784d7.chunk.js","sourcesContent":["const questions = [ \n    {\n      image:\"./images/pink-panther.png\",\n      questionText: \"which is the panther's color?\",\n      \n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false },\n        { answerText: \"Pink\", isCorrect: true },\n        { answerText: \"Orange\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/sponge.png\",\n      questionText: \"what is my color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: true},\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/Red_bird.png\",\n      questionText: \"what is bird's color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Red\", isCorrect: true },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/green.jpg\",\n      questionText: \"what is my color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: true },\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/blue.png\",\n      questionText: \"what is the bird's color?\",\n      answerOptions: [\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: true }\n      ]\n    },\n    {\n      image:\"./images/orage.jpg\",\n      questionText: \"what is fruit's color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Orange\", isCorrect: true },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/pink-panther.png\",\n      questionText: \"29+13\",\n      \n      answerOptions: [\n        { answerText: \"45\", isCorrect: false },\n        { answerText: \"54\", isCorrect: false },\n        { answerText: \"42\", isCorrect: true },\n        { answerText: \"33\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/sponge.png\",\n      questionText: \"31*2\",\n      answerOptions: [\n        { answerText: \"62\", isCorrect: true},\n        { answerText: \"32\", isCorrect: false },\n        { answerText: \"34\", isCorrect: false },\n        { answerText: \"33\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/Red_bird.png\",\n      questionText: \"43+3\",\n      answerOptions: [\n        { answerText: \"43\", isCorrect: false },\n        { answerText: \"45\", isCorrect: false },\n        { answerText: \"46\", isCorrect: true },\n        { answerText: \"50\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/green.jpg\",\n      questionText: \"33+33\",\n      answerOptions: [\n        { answerText: \"55\", isCorrect: false },\n        { answerText: \"66\", isCorrect: true },\n        { answerText: \"56\", isCorrect: false },\n        { answerText: \"48\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/green.jpg\",\n      questionText: \"33*3\",\n      answerOptions: [\n        { answerText: \"55\", isCorrect: false },\n        { answerText: \"99\", isCorrect: true },\n        { answerText: \"36\", isCorrect: false },\n        { answerText: \"56\", isCorrect: false }\n      ]\n    },\n    {\n      // image:\"./images/green.jpg\",\n      questionText: \"33=33\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: true },\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    }\n  ];\n   export default questions;","import React, {useState} from 'react';\nimport { NavLink } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport { Card } from 'react-bootstrap';\nimport Game from './game';\n\nfunction Home() {\n    const[isClick,setIsClick]=useState(false);\n    const purple=\"red\";\n    const[show,setShow] =useState(false);\n    if(isClick){\n        return <Game/>\n    }\n  return (  \n      <div>\n          \n          <button className='start_button'\n            onClick={()=>setIsClick(true)}>\n              start\n          </button>\n          <br/>\n          \n          <button className='btn1' onClick={()=>setShow(!show)}>Rules</button>\n          {\n            show?<div class='rules'>\n              <li>Press the start button to start the game</li>\n              <li>There are six questions in each round</li>\n              <li>If you score more than equal to 5 you will progressed to the next round</li>\n              <li>In other cases you can restart the game</li>\n            </div>:null\n          }  \n      </div>                   \n  );\n}\nexport default Home;","import React, { useState } from \"react\";\nimport questions from \"./questions\"; \nimport {card,CardImg} from \"react-bootstrap\";\nimport Home from \"./HomePage\";\n// import ig from \"./images/python-course.jp\";\n// const App=()=>{\n  \n//   const [items,setItems] = useState(questions);\n//   const [currentimage, setCurrentImage]=useState(0);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showScore, setShowScore] = useState(false);\n//   const [score, setScore] = useState(0);\n//   const handleAnswerButtonClick = (isCorrect) => {\n//     if (isCorrect === true) {\n//       setScore(score + 1);\n//     }\n\n//     const nextQuetions = currentQuestion + 1;\n//     if (nextQuetions < questions.length) {\n//       setCurrentQuestion(nextQuetions);\n//     } else {\n//       setShowScore(true);\n//     }\n//     const nextImage = currentimage + 1;\n//     if (nextImage < questions.length) {\n//       setCurrentImage(nextImage);\n//     }\n//   };\n\n//   return (\n//     <>\n      \n//       <h1 className=\"header\">Quiz</h1>\n//       <div>\n        \n//         {/* <img src={image} alt=\"web-course\" /> */}\n        \n//       </div>\n//       <div className=\"app\">\n//         {showScore ? (\n//           <div className=\"score-section\">\n//             You scored {score} out of {questions.length}\n//           </div>\n//         ) : (\n//           <>\n//             <div className=\"question-section\">\n//               <div className=\"question-count\">\n//                 <span>Question {currentQuestion + 1}</span>\n//                 {questions.length}\n//               </div>\n//               <div className=\"col-12 col-md-5 m-1\">\n//                 {/* {\n//                   items.map((elem) => {\n//                     const {image,questionText,answerOptions} = elem;\n                    \n//                   })\n//                 } */}\n//                 {questions[currentimage].image}\n//                 {questions[currentQuestion].questionText }\n//               </div>\n//             </div>\n\n//             <div className=\"answer-section\">\n//               {questions[currentQuestion].answerOptions.map((answerOptions) => (\n//                 <button\n//                   onClick={() =>\n//                     handleAnswerButtonClick(answerOptions.isCorrect)\n//                   }\n//                 >\n//                   {answerOptions.answerText}\n//                 </button>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\n// import React from \"react\";\n// import {Button} from \"react-bootstrap\";\n// import \"./index.css\";\n\nfunction Game2() {\n  const question = {\n\n  }\n  const [currentimage, setCurrentImage]=useState(0);\n  const [items,setItems] = useState(questions);\n\n  const [currentQuestion, setCurrentQuestion] = useState(6);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const purple=\"yellow\";\n  const [bg,setBg] = useState(purple);\n  const [clicked,setClicked] =useState(false);\n  const [answer,setAnswer] = useState('');\n  const [isClick,setIsClick]=useState(false);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n      setTimeout(() => {\n        if (isCorrect === true) {\n          setScore(score + 1);\n          setAnswer('right');\n            \n          \n        }\n        setClicked(true);\n        const nextQuetions = currentQuestion + 1;\n        if (nextQuetions < questions.length) {\n          setCurrentQuestion(nextQuetions);\n          // let newBg='red';\n          // setBg(newBg);\n        } \n        else {\n          setShowScore(true);\n        }\n        // const nextImage = currentimage + 1;\n        // if (nextImage < questions.length) {\n        //   setCurrentImage(nextImage);\n        // }\n      }, 300);\n      if(score>=1){\n        \n      }\n    \n  };\n  if(isClick){\n    return <Home/>\n  }\n  return (\n    <>\n      <div className=\"container\">\n      {showScore ? (\n        <div className=\"final\" style={{alignItems:\"center\"}}>\n          <h1>congratulation</h1>\n          <div>  \n            \n            You scored {score} out of 6\n          </div>\n         \n          <div class=\"go_back_btn\">\n            <button class=\"go_back\"\n            onClick={()=>setIsClick(true)} >Go Back</button>\n            \n          </div>\n        </div>\n\n    ) \n    :(\n      <>\n        <div >\n        \n        <div className=\"card\" style={{width:'20rem'},{background:'green'},{padding:'20px'},{boxShadow:'0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'},{borderRadius:\"8px\"}}>\n          {/* <img class=\"img-fluid\" src={questions[currentimage].image} alt=\"web-course\" width=\"320\" height=\"160\"/>  */}\n          {/* {questions[currentimage].image} */}\n          <p class=\"text-center\">\n            {questions[currentQuestion].questionText }\n\n          </p>\n        </div>\n        <div className=\"grid grid-cols-2 gap-6 mt-6\">\n          {questions[currentQuestion].answerOptions.map((answerOptions) => (\n          <button className=\"answer-button\"\n            onClick={() =>\n              handleAnswerButtonClick(answerOptions.isCorrect)\n            }\n            \n            // style={\n            //   answerOptions.isCorrect ?\n            //     styleForCorrectAnswer:\n            //   !isCorrect ?\n            //     styleForWrongAnswer:\n            //   styleForCorrectAnswer\n            // }\n          >\n          {answerOptions.answerText}\n          </button>\n          ))}\n          {/* <button className=\"btn btn-outline-success\">ashbn;kl fds</button> */}\n        </div>\n        </div>\n      </>\n    \n        \n   \n  )}  \n    </div>\n    </>\n  )\n}\nexport default Game2;\n /* <div className=\"grid grid-cols-2 gap-6 mt-6\">\n      <button className=\"bg-white p-4 text-purple-800\">answer 1</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 2</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 3</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 4</button>\n    </div> */","import React, { useState } from \"react\";\nimport questions from \"./questions\"; \nimport {card,CardImg} from \"react-bootstrap\";\nimport Home from \"./HomePage\";\nimport Game2 from \"./level2\";\n\nfunction Game() {\n  const question = {\n\n  }\n  const [currentimage, setCurrentImage]=useState(0);\n  const [items,setItems] = useState(questions);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const purple=\"yellow\";\n  const [bg,setBg] = useState(purple);\n  const [clicked,setClicked] =useState(false);\n  const [answer,setAnswer] = useState('');\n  const[isClick,setIsClick]=useState(false);\n  const[isNextClick,setIsNextClick]=useState(false);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n      setTimeout(() => {\n        if (isCorrect === true) {\n          setScore(score + 1);\n          setAnswer('right');\n            \n          \n        }\n        setClicked(true);\n        const nextQuetions = currentQuestion + 1;\n        if (nextQuetions < 6) {\n          setCurrentQuestion(nextQuetions);\n        } \n        else {\n          setShowScore(true);\n        }\n        const nextImage = currentimage + 1;\n        if (nextImage < questions.length) {\n          setCurrentImage(nextImage);\n        }\n      }, 300);\n      if(score>=1){\n        \n      }\n    \n  };\n  if(isClick){\n    return <Home/>\n  }\n  if(isNextClick){\n    return <Game2/>\n  }\n  return (\n    <>\n      <div className=\"container\">\n      {(showScore && score>=4) ? (\n        <div className=\"final\" style={{alignItems:\"center\"}}>\n          <h1>congratulation</h1>\n          <div>  \n            \n            You scored {score} out of 6\n          </div>\n         \n          <div class=\"go_back_btn\">\n            <button class=\"go_back\"\n            onClick={()=>setIsClick(true)} >Go Back</button>\n            \n          </div>\n          <button className='btn1'\n          onClick={()=>setIsNextClick(true)}>next</button>\n        </div>\n\n    ) : (showScore && score<3)? (\n      <div className=\"final\" style={{alignItems:\"center\"}}>\n          <div>  \n            You scored {score} out of 6\n          </div>\n         \n          <div class=\"go_back_btn\">\n            <button class=\"go_back\"\n            onClick={()=>setIsClick(true)} >Go Back</button>\n          </div>\n          \n        </div>\n    ) \n    :(\n      <>\n        <div >\n        \n        <div className=\"card\" style={{width:'20rem'},{background:'green'},{padding:'20px'},{boxShadow:'0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'},{borderRadius:\"8px\"}}>\n          <img class=\"img-fluid\" src={questions[currentimage].image} alt=\"web-course\" width=\"320\" height=\"160\"/> \n          <p class=\"text-center\">\n            {questions[currentQuestion].questionText }\n\n          </p>\n        </div>\n        <div className=\"grid grid-cols-2 gap-6 mt-6\">\n          {questions[currentQuestion].answerOptions.map((answerOptions) => (\n          <button className=\"answer-button\"\n            onClick={() =>\n              handleAnswerButtonClick(answerOptions.isCorrect)\n            }\n          >\n          {answerOptions.answerText}\n          </button>\n          ))}\n        </div>\n        </div>\n      </>\n  )}  \n    </div>\n    </>\n  )\n}\nexport default Game;","// import \"./index.css\";\n// import projects from \"../image/projects.png\";\n// import images from '../image';\n// import image from './images/web-course.jpg';\n// import image from '../public/images/web-course.jpg';\n\nimport React, { Component, useState } from \"react\";\nimport questions from \"./component/questions\";\nimport {card,CardImg} from \"react-bootstrap\";\nimport { render } from \"@testing-library/react\";\nimport Game from \"./component/game\";\nimport Home from \"./component/HomePage\";\nimport { BrowserRouter,Route,Link } from \"react-router-dom\";\n// import Game from \"./component/game\";\n// import ig from \"./images/python-course.jp\";\n// const App=()=>{\n  \n//   const [items,setItems] = useState(questions);\n//   const [currentimage, setCurrentImage]=useState(0);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showScore, setShowScore] = useState(false);\n//   const [score, setScore] = useState(0);\n//   const handleAnswerButtonClick = (isCorrect) => {\n//     if (isCorrect === true) {\n//       setScore(score + 1);\n//     }\n\n//     const nextQuetions = currentQuestion + 1;\n//     if (nextQuetions < questions.length) {\n//       setCurrentQuestion(nextQuetions);\n//     } else {\n//       setShowScore(true);\n//     }\n//     const nextImage = currentimage + 1;\n//     if (nextImage < questions.length) {\n//       setCurrentImage(nextImage);\n//     }\n//   };\n\n//   return (\n//     <>\n      \n//       <h1 className=\"header\">Quiz</h1>\n//       <div>\n        \n//         {/* <img src={image} alt=\"web-course\" /> */}\n        \n//       </div>\n//       <div className=\"app\">\n//         {showScore ? (\n//           <div className=\"score-section\">\n//             You scored {score} out of {questions.length}\n//           </div>\n//         ) : (\n//           <>\n//             <div className=\"question-section\">\n//               <div className=\"question-count\">\n//                 <span>Question {currentQuestion + 1}</span>\n//                 {questions.length}\n//               </div>\n//               <div className=\"col-12 col-md-5 m-1\">\n//                 {/* {\n//                   items.map((elem) => {\n//                     const {image,questionText,answerOptions} = elem;\n                    \n//                   })\n//                 } */}\n//                 {questions[currentimage].image}\n//                 {questions[currentQuestion].questionText }\n//               </div>\n//             </div>\n\n//             <div className=\"answer-section\">\n//               {questions[currentQuestion].answerOptions.map((answerOptions) => (\n//                 <button\n//                   onClick={() =>\n//                     handleAnswerButtonClick(answerOptions.isCorrect)\n//                   }\n//                 >\n//                   {answerOptions.answerText}\n//                 </button>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\n// import React from \"react\";\n// import {Button} from \"react-bootstrap\";\n// import \"./index.css\";\n\nclass App extends Component {\n  render(){\n    return(\n      <Home/>\n      // <BrowserRouter>\n      // <Link to=\"/game\">Start</Link>\n      //   <Route path=\"/game\" Component={Game}/>\n      // </BrowserRouter>\n    );\n  }\n}\nexport default App;\n /* <div className=\"grid grid-cols-2 gap-6 mt-6\">\n      <button className=\"bg-white p-4 text-purple-800\">answer 1</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 2</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 3</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 4</button>\n    </div> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}