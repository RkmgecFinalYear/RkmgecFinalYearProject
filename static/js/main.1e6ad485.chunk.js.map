{"version":3,"sources":["component/questions.js","component/HomePage.js","component/game.js","App.js","reportWebVitals.js","index.js"],"names":["questions","image","questionText","answerOptions","answerText","isCorrect","Home","useState","isClick","setIsClick","className","onClick","Game","currentimage","setCurrentImage","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","setClicked","setAnswer","style","alignItems","length","class","borderRadius","src","alt","width","height","map","setTimeout","nextQuetions","nextImage","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e6ad485.chunk.js","sourcesContent":["const questions = [ \n    {\n      image:\"./images/pink-panther.png\",\n      questionText: \"which is the panther's color?\",\n      \n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false },\n        { answerText: \"Pink\", isCorrect: true },\n        { answerText: \"Orange\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/sponge.png\",\n      questionText: \"what is my color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: true},\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/Red_bird.png\",\n      questionText: \"what is bird's color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Red\", isCorrect: true },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/green.jpg\",\n      questionText: \"what is my color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: true },\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    },\n    {\n      image:\"./images/blue.png\",\n      questionText: \"what is the bird's color?\",\n      answerOptions: [\n        { answerText: \"Red\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Blue\", isCorrect: true }\n      ]\n    },\n    {\n      image:\"./images/orage.jpg\",\n      questionText: \"what is fruit's color?\",\n      answerOptions: [\n        { answerText: \"Yellow\", isCorrect: false },\n        { answerText: \"Green\", isCorrect: false },\n        { answerText: \"Orange\", isCorrect: true },\n        { answerText: \"Blue\", isCorrect: false }\n      ]\n    }\n  ];\n   export default questions;","import React, {useState} from 'react';\nimport { NavLink } from 'react-bootstrap';\nimport { useNavigate } from \"react-router-dom\";\nimport Game from './game';\n\nfunction Home() {\n    const[isClick,setIsClick]=useState(false);\n    const purple=\"red\";\n    const[bg,setBg] =useState(purple);\n//   const navigate = useNavigate();\n  \n//   const handleRoute = () =>{ \n//     navigate.push(\"/game\");\n//   }\n    if(isClick){\n        return <Game/>\n    }\n  return (  \n      <div>\n          \n          <button className='start_button'\n            onClick={()=>setIsClick(true)}>\n              start\n          </button>\n      </div>                   \n          \n        // <NavLink to=\"/game\">\n        //     start\n        // </NavLink>\n  );\n}\nexport default Home;","// import \"./index.css\";\n// import projects from \"../image/projects.png\";\n// import images from '../image';\n// import image from './images/web-course.jpg';\n// import image from '../public/images/web-course.jpg';\n\nimport React, { useState } from \"react\";\nimport questions from \"./questions\"; \nimport {card,CardImg} from \"react-bootstrap\";\nimport Home from \"./HomePage\";\n// import ig from \"./images/python-course.jp\";\n// const App=()=>{\n  \n//   const [items,setItems] = useState(questions);\n//   const [currentimage, setCurrentImage]=useState(0);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showScore, setShowScore] = useState(false);\n//   const [score, setScore] = useState(0);\n//   const handleAnswerButtonClick = (isCorrect) => {\n//     if (isCorrect === true) {\n//       setScore(score + 1);\n//     }\n\n//     const nextQuetions = currentQuestion + 1;\n//     if (nextQuetions < questions.length) {\n//       setCurrentQuestion(nextQuetions);\n//     } else {\n//       setShowScore(true);\n//     }\n//     const nextImage = currentimage + 1;\n//     if (nextImage < questions.length) {\n//       setCurrentImage(nextImage);\n//     }\n//   };\n\n//   return (\n//     <>\n      \n//       <h1 className=\"header\">Quiz</h1>\n//       <div>\n        \n//         {/* <img src={image} alt=\"web-course\" /> */}\n        \n//       </div>\n//       <div className=\"app\">\n//         {showScore ? (\n//           <div className=\"score-section\">\n//             You scored {score} out of {questions.length}\n//           </div>\n//         ) : (\n//           <>\n//             <div className=\"question-section\">\n//               <div className=\"question-count\">\n//                 <span>Question {currentQuestion + 1}</span>\n//                 {questions.length}\n//               </div>\n//               <div className=\"col-12 col-md-5 m-1\">\n//                 {/* {\n//                   items.map((elem) => {\n//                     const {image,questionText,answerOptions} = elem;\n                    \n//                   })\n//                 } */}\n//                 {questions[currentimage].image}\n//                 {questions[currentQuestion].questionText }\n//               </div>\n//             </div>\n\n//             <div className=\"answer-section\">\n//               {questions[currentQuestion].answerOptions.map((answerOptions) => (\n//                 <button\n//                   onClick={() =>\n//                     handleAnswerButtonClick(answerOptions.isCorrect)\n//                   }\n//                 >\n//                   {answerOptions.answerText}\n//                 </button>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\n// import React from \"react\";\n// import {Button} from \"react-bootstrap\";\n// import \"./index.css\";\n\nfunction Game() {\n  const question = {\n\n  }\n  const [currentimage, setCurrentImage]=useState(0);\n  const [items,setItems] = useState(questions);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const purple=\"yellow\";\n  const [bg,setBg] = useState(purple);\n  const [clicked,setClicked] =useState(false);\n  const [answer,setAnswer] = useState('');\n  const[isClick,setIsClick]=useState(false);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n      setTimeout(() => {\n        if (isCorrect === true) {\n          setScore(score + 1);\n          setAnswer('right');\n            \n          \n        }\n        setClicked(true);\n        const nextQuetions = currentQuestion + 1;\n        if (nextQuetions < questions.length) {\n          setCurrentQuestion(nextQuetions);\n          // let newBg='red';\n          // setBg(newBg);\n        } \n        else {\n          setShowScore(true);\n        }\n        const nextImage = currentimage + 1;\n        if (nextImage < questions.length) {\n          setCurrentImage(nextImage);\n        }\n      }, 300);\n      if(score>=1){\n        \n      }\n    \n  };\n  if(isClick){\n    return <Home/>\n  }\n  return (\n    <>\n      <div className=\"container\">\n      {showScore ? (\n        <div className=\"final\" style={{alignItems:\"center\"}}>\n          <div>  \n            You scored {score} out of {questions.length}\n          </div>\n         \n          <div class=\"go_back_btn\">\n            <button class=\"go_back\"\n            onClick={()=>setIsClick(true)} >Go Back</button>\n          </div>\n        </div>\n\n    ) : (\n      <>\n        <div >\n        \n        <div className=\"card\" style={{width:'20rem'},{background:'green'},{padding:'20px'},{boxShadow:'0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'},{borderRadius:\"8px\"}}>\n          <img class=\"img-fluid\" src={questions[currentimage].image} alt=\"web-course\" width=\"320\" height=\"160\"/> \n          {/* {questions[currentimage].image} */}\n          <p class=\"text-center\">\n            {questions[currentQuestion].questionText }\n\n          </p>\n        </div>\n        <div className=\"grid grid-cols-2 gap-6 mt-6\">\n          {questions[currentQuestion].answerOptions.map((answerOptions) => (\n          <button className=\"answer-button\"\n            onClick={() =>\n              handleAnswerButtonClick(answerOptions.isCorrect)\n            }\n            \n            // style={\n            //   answerOptions.isCorrect ?\n            //     styleForCorrectAnswer:\n            //   !isCorrect ?\n            //     styleForWrongAnswer:\n            //   styleForCorrectAnswer\n            // }\n          >\n          {answerOptions.answerText}\n          </button>\n          ))}\n          {/* <button className=\"btn btn-outline-success\">ashbn;kl fds</button> */}\n        </div>\n        </div>\n      </>\n    \n        \n   \n  )}  \n    </div>\n    </>\n  )\n}\nexport default Game;\n /* <div className=\"grid grid-cols-2 gap-6 mt-6\">\n      <button className=\"bg-white p-4 text-purple-800\">answer 1</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 2</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 3</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 4</button>\n    </div> */","// import \"./index.css\";\n// import projects from \"../image/projects.png\";\n// import images from '../image';\n// import image from './images/web-course.jpg';\n// import image from '../public/images/web-course.jpg';\n\nimport React, { Component, useState } from \"react\";\nimport questions from \"./component/questions\";\nimport {card,CardImg} from \"react-bootstrap\";\nimport { render } from \"@testing-library/react\";\nimport Game from \"./component/game\";\nimport Home from \"./component/HomePage\";\nimport { BrowserRouter,Route,Link } from \"react-router-dom\";\n// import Game from \"./component/game\";\n// import ig from \"./images/python-course.jp\";\n// const App=()=>{\n  \n//   const [items,setItems] = useState(questions);\n//   const [currentimage, setCurrentImage]=useState(0);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [showScore, setShowScore] = useState(false);\n//   const [score, setScore] = useState(0);\n//   const handleAnswerButtonClick = (isCorrect) => {\n//     if (isCorrect === true) {\n//       setScore(score + 1);\n//     }\n\n//     const nextQuetions = currentQuestion + 1;\n//     if (nextQuetions < questions.length) {\n//       setCurrentQuestion(nextQuetions);\n//     } else {\n//       setShowScore(true);\n//     }\n//     const nextImage = currentimage + 1;\n//     if (nextImage < questions.length) {\n//       setCurrentImage(nextImage);\n//     }\n//   };\n\n//   return (\n//     <>\n      \n//       <h1 className=\"header\">Quiz</h1>\n//       <div>\n        \n//         {/* <img src={image} alt=\"web-course\" /> */}\n        \n//       </div>\n//       <div className=\"app\">\n//         {showScore ? (\n//           <div className=\"score-section\">\n//             You scored {score} out of {questions.length}\n//           </div>\n//         ) : (\n//           <>\n//             <div className=\"question-section\">\n//               <div className=\"question-count\">\n//                 <span>Question {currentQuestion + 1}</span>\n//                 {questions.length}\n//               </div>\n//               <div className=\"col-12 col-md-5 m-1\">\n//                 {/* {\n//                   items.map((elem) => {\n//                     const {image,questionText,answerOptions} = elem;\n                    \n//                   })\n//                 } */}\n//                 {questions[currentimage].image}\n//                 {questions[currentQuestion].questionText }\n//               </div>\n//             </div>\n\n//             <div className=\"answer-section\">\n//               {questions[currentQuestion].answerOptions.map((answerOptions) => (\n//                 <button\n//                   onClick={() =>\n//                     handleAnswerButtonClick(answerOptions.isCorrect)\n//                   }\n//                 >\n//                   {answerOptions.answerText}\n//                 </button>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\n// import React from \"react\";\n// import {Button} from \"react-bootstrap\";\n// import \"./index.css\";\n\nclass App extends Component {\n  render(){\n    return(\n      <Home/>\n      // <BrowserRouter>\n      // <Link to=\"/game\">Start</Link>\n      //   <Route path=\"/game\" Component={Game}/>\n      // </BrowserRouter>\n    );\n  }\n}\nexport default App;\n /* <div className=\"grid grid-cols-2 gap-6 mt-6\">\n      <button className=\"bg-white p-4 text-purple-800\">answer 1</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 2</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 3</button>\n      <button className=\"bg-white p-4 text-purple-800\">answer 4</button>\n    </div> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}